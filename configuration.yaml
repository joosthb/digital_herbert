homeassistant:
  media_dirs:
    media: "/config/media"
  customize: !include customize.yaml
  auth_providers:
    - type: trusted_networks
      trusted_networks:
        - 192.168.99.0/24
        - 192.168.1.0/24
        - 127.0.0.1
        - ::1
      allow_bypass_login: true

backup:

# Configure a default setup of Home Assistant (frontend, api, etc)
default_config:

# template light for turning display on off
light:
  - platform: template
    lights:
      screen:
        turn_on:
          service: shell_command.display_on
        turn_off:
          service: shell_command.display_off

sensor:
  # Import gps data
  - platform: gpsd
  # Integrate power values
  - platform: integration
    source: sensor.dyn_wal_inverted
    name: dynamo_wal_energie
  - platform: integration
    source: sensor.solar_inverted
    name: solar_energie
  - platform: integration
    source: sensor.vermogen_verbruikers
    name: verbruikers_energie
  - platform: integration
    source: sensor.invoeders
    name: invoeders_energie

template:
  - sensor:
      - name: "dyn_wal_inverted"
        unit_of_measurement: "W"
        state_class: measurement
        device_class: power
        state: >
          {% set vermogen_dynamo = states('sensor.vermogen_dynamo')|float(0)*-1 %}
          {{ vermogen_dynamo | abs if vermogen_dynamo > 0.0 else 0.0 }}
      - name: solar_inverted
        unit_of_measurement: "W"
        state_class: measurement
        device_class: power
        state: >
          {% set vermogen_solar = states('sensor.vermogen_solar')|float(0)*-1 %}
          {{ vermogen_solar | abs if vermogen_solar > 0.0 else 0.0 }}
      - name: "invoeders"
        unit_of_measurement: "W"
        state_class: measurement
        device_class: power
        state: >
          {% set vermogen_solar = states('sensor.vermogen_solar')|float(0)*-1 %}
          {% set vermogen_dynamo = states('sensor.vermogen_dynamo')|float(0)*-1 %}
          {% set invoeders = (vermogen_solar + vermogen_dynamo) | float(0) %}
          {{ invoeders | abs if invoeders > 0.0 else 0.0 }}

group: !include groups.yaml
automation: !include automations.yaml
script: !include scripts.yaml
scene: !include scenes.yaml

recorder:
  # only record herbert health status
  include:
    entities:
      - switch.acculader
      - binary_sensor.beweging
      - sensor.energie_verbruik_totaal
      - sensor.vermogen_dynamo
      - sensor.solar_inverted
      - sensor.vermogen_verbruikers
      - sensor.accuspanning
      - sensor.dynamo_wal_energie
      - sensor.solar_energie
      - sensor.verbruikers_energie
      - sensor.invoeders_energie
      - sensor.gps
      - sensor.luchtvochtigheid
      - sensor.temperatuur
      - sensor.accu_soc
      - sensor.accu_total_charge_meter
      - sensor.accu_power
      - sensor.accu_cell_voltages_delta
      - sensor.accu_cell_voltages_average
      - zone.home
      - sensor.accu_total_energy_charge_meter
      - sensor.accu_total_energy_discharge_meter
      - sensor.accu_charge
      - binary_sensor.laden
  # Only commit db to disk every 5 minutes.
  commit_interval: 300

# shell commands executed through named pipe, mounted on host
shell_command:
  halt: echo "docker stop $(docker ps -q) && sudo shutdown -h now" > /containerpipe
  display_off: echo "export DISPLAY=:0; xset dpms force off; xset dpms 60 0 0" > /containerpipe
  display_on: echo "export DISPLAY=:0; xset -dpms" > /containerpipe
  restart_gpsd: echo "sudo systemctl restart gpsd" > /containerpipe
  purge_backups: cd /config/backups/ && ls -A1t | tail -n +8 | xargs rm -v

  # entry for the Telegram Bot
telegram_bot:
  - platform: polling
    api_key: !secret telegram_api_key
    allowed_chat_ids:
      - 451219846

# entry for the notifier
notify:
  - name: hb_tel
    platform: telegram
    chat_id: 451219846

